setwd('C:/Users/creil/Desktop/info300final/analysis/')
big_data <- read.csv('data/fifties.csv')
View(big_data)
six <- read.csv('data/sixties.csv')
six <- rbind(six, read.csv('data/sixties_1.csv'))
six <- read.csv('data/sixties.csv')
six <- rbind(six, read.csv('data/sixties_1.csv'), read.csv('data/sixties_2.csv'), read.csv('data/sixties_3.csv'), read.csv('data/sixties_4.csv'))
seventies <- rbind(read.csv('data/seventies.csv')read.csv, ('data/seventies_1.csv'), read.csv('data/seventies_2.csv'), read.csv('data/seventies_3.csv'))
seventies <- rbind(read.csv('data/seventies.csv'), read.csv, ('data/seventies_1.csv'), read.csv('data/seventies_2.csv'), read.csv('data/seventies_3.csv'))
seventies <- read.csv('data/seventies.csv')
seventies <- rbind(seventies, read.csv, ('data/seventies_1.csv'), read.csv('data/seventies_2.csv'), read.csv('data/seventies_3.csv'))
seventies <- rbind(seventies, read.csv('data/seventies_1.csv'), read.csv('data/seventies_2.csv'), read.csv('data/seventies_3.csv'))
eighties <- read.csv('data/eighties.csv')
eighties <- rbind(eighties, read.csv('data/eighties_1.csv'), read.csv('data/eighties_2.csv'), read.csv('data/eighties_3.csv'))
nineties <- read.csv('data/nineties.csv')
nineties <- rbind(nineties, read.csv('data/nineties'), read.csv('data/nineties_2.csv'), read.csv('data/nineties_3.csv'))
big_data <- rbind(fifties, sixties, seventies, eighties, nineties)
fifties <- read.csv('data/fifties.csv')
big_data <- rbind(fifties, sixties, seventies, eighties, nineties)
sixties <- read.csv('data/sixties.csv')
sixties <- rbind(six, read.csv('data/sixties_1.csv'), read.csv('data/sixties_2.csv'), read.csv('data/sixties_3.csv'), read.csv('data/sixties_4.csv'))
seventies <- read.csv('data/seventies.csv')
seventies <- rbind(seventies, read.csv('data/seventies_1.csv'), read.csv('data/seventies_2.csv'), read.csv('data/seventies_3.csv'))
eighties <- read.csv('data/eighties.csv')
eighties <- rbind(eighties, read.csv('data/eighties_1.csv'), read.csv('data/eighties_2.csv'), read.csv('data/eighties_3.csv'))
nineties <- read.csv('data/nineties.csv')
nineties <- rbind(nineties, read.csv('data/nineties'), read.csv('data/nineties_2.csv'), read.csv('data/nineties_3.csv'))
big_data <- rbind(fifties, sixties, seventies, eighties, nineties)
nineties <- rbind(nineties, read.csv('data/nineties_1.csv'), read.csv('data/nineties_2.csv'), read.csv('data/nineties_3.csv'))
big_data <- rbind(fifties, sixties, seventies, eighties, nineties)
View(big_data)
new <- na.omit(big_data)
install.packages("anytime")
require(anytime)
big_data <- na.omit(big_data)
big_data$date <- anydate(big_data$date)
big_data$date <- anydate(as.character(big_data$date))
big_data$year <- lubridate::year(big_data$date)
valence_by_year <- big_data %>% group_by(year) %>% summarise(avg_v = mean(valence))
require(dplyr)
valence_by_year <- big_data %>% group_by(year) %>% summarise(avg_v = mean(valence))
View(valence_by_year)
valence_by_year <- big_data %>% group_by(year) %>% summarise(avg_v = mean(valence))
tempo_by_year <- big_data %>% group_by(year) %>% summarise(avg_t = mean(tempo))
dance_by_year <- big_data %>% group_by(year) %>% summarise(avg_d = mean(danceability))
energy_by_year <- big_data %>% group_by(year) %>% summarise(avg_e = mean(energy))
genre_by_year <- big_data %>% group_by(year) %>% summarise(genre = mdde(genre))
genre_by_year <- big_data %>% group_by(year) %>% summarise(genre = mode(genre))
View(genre_by_year)
MaxTable <- function(x){
dd <- unique(x)
dd[which.max(tabulate(match(x,dd)))]
}
genre_by_year <- big_data %>% group_by(year) %>% summarise(genre = MaxTable(genre))
View(genre_by_year)
require(ggplot2)
require(plotly)
v  <- plot_ly(
x = valence_by_year$year,
y = valence_by_year$avg_v,
name = "Positivity By year",
type = "bar"
)
v
v_line <- plot_ly(valence_by_year, x = ~year, y = ~avg_v, type = 'scatter', mode = 'lines')
v_line
dance_line <- plot_ly(dance_by_year, x = ~year, y = ~avg_d, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Positivity by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Valence"))
dance_line
tempo_line <- plot_ly(tempo_by_year, x = ~year, y = ~avg_t, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Tempo by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Tempo"))
tempo_line
energy_line <- plot_ly(energy_by_year, x = ~year, y = ~avg_e, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Song Energy by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Energy"))
energy_line
cuban <- read.csv('data/cuban_missle.csv')
v_line <- plot_ly(valence_by_year, x = ~year, y = ~avg_v, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Positivity by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Valence"))
v-line
v_line
dance_line <- plot_ly(dance_by_year, x = ~year, y = ~avg_d, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Danceability by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Danceability"))
dance_line
res <- t.test(sixties$valence, cuban$valence, var.equal = TRUE)
res
cuban <- na.omit(read.csv('data/cuban_missle.csv'))
res <- t.test(sixties$valence, cuban$valence, var.equal = TRUE)
res
View(sixties)
sixties <- na.omit(sixties)
res <- t.test(sixties$valence, cuban$valence, var.equal = TRUE)
res
jfk <- na.omit(read.csv('JFK.csv'))
jfk <- na.omit(read.csv('data/JFK.csv'))
jfk <- na.omit(read.csv('data/JFK.csv'))
j <- t.test(sixties$valence, jfk$valence, var.equal = TRUE)
j
mlk <- na.omit(read.csv('data/MLK.csv'))
m <- t.test(sixties$valence, mlk$valence, var.equal = TRUE)
m
summer <- na.omit(read.csv('data/love.csv'))
'%!in%' <- function(x,y)!('%in%'(x,y))
sixties_test <- sixties %>% filter(spotifyID %!in% summer)
'%!in%' <- function(x,y)!('%in%'(x,y))
sixties_test <- sixties %>% filter(spotifyID %!in% summer)
sixties_test <- sixties %>% filter(sixties %!in% summer)
sixties_test <- sixties %>% filter(spotifyID %!in% summer$spotifyID)
summer <- t.test(sixties$valence, summer$valence, var.equal = TRUE)
summer <- na.omit(read.csv('data/love.csv'))
'%!in%' <- function(x,y)!('%in%'(x,y))
sixties_test <- sixties %>% filter(spotifyID %!in% summer$spotifyID)
s <- t.test(sixties$valence, summer$valence, var.equal = TRUE)
s
s <- t.test(sixties$energy, summer$energy, var.equal = TRUE)
s
s <- t.test(sixties$danceability, summer$danceability, var.equal = TRUE)
s
s <- t.test(sixties$energy, summer$energy, var.equal = TRUE)
s
require(corrplot)
matrix = cor(big_data, use = "pairwise.complete.obs")
corrplot(matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 60)
matrix = cor(big_data, use = "pairwise.complete.obs")
v_line <- plot_ly(valence_by_year, x = ~year, y = ~avg_v, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Positivity by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Valence"))
v_line
summer <- na.omit(read.csv('data/love.csv'))
'%!in%' <- function(x,y)!('%in%'(x,y))
sixties_test <- sixties %>% filter(spotifyID %!in% summer$spotifyID)
s <- t.test(sixties$energy, summer$energy, var.equal = TRUE)
s
zeros <- read.csv('data/zeros.csv')
zeros <- rbind(nineties, read.csv('data/zeros_1.csv'), read.csv('data/zeros_2.csv'), read.csv('data/zeros_3.csv'))
big_data <- rbind(fifties, sixties, seventies, eighties, nineties, zeros)
big_data <- na.omit(big_data)
big_data$date <- anydate(as.character(big_data$date))
big_data$year <- lubridate::year(big_data$date)
MaxTable <- function(x){
dd <- unique(x)
dd[which.max(tabulate(match(x,dd)))]
}
valence_by_year <- big_data %>% group_by(year) %>% summarise(avg_v = mean(valence))
v_line <- plot_ly(valence_by_year, x = ~year, y = ~avg_v, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Positivity by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Valence"))
v_line
tempo_by_year <- big_data %>% group_by(year) %>% summarise(avg_t = mean(tempo))
dance_by_year <- big_data %>% group_by(year) %>% summarise(avg_d = mean(danceability))
dance_line <- plot_ly(dance_by_year, x = ~year, y = ~avg_d, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Danceability by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Danceability"))
dance_line
v_line <- plot_ly(valence_by_year, x = ~year, y = ~avg_v, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Positivity by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Valence"))
v_line
valence_by_year <- big_data %>% group_by(year) %>% summarise(avg_v = mean(valence))
tempo_by_year <- big_data %>% group_by(year) %>% summarise(avg_t = mean(tempo))
dance_by_year <- big_data %>% group_by(year) %>% summarise(avg_d = mean(danceability))
energy_by_year <- big_data %>% group_by(year) %>% summarise(avg_e = mean(energy))
genre_by_year <- big_data %>% group_by(year) %>% summarise(genre = MaxTable(genre))
dance_line <- plot_ly(dance_by_year, x = ~year, y = ~avg_d, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Danceability by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Danceability"))
dance_line
tempo_line <- plot_ly(tempo_by_year, x = ~year, y = ~avg_t, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Tempo by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Tempo"))
tempo_line
energy_line <- plot_ly(energy_by_year, x = ~year, y = ~avg_e, type = 'scatter', mode = 'lines') %>%
layout(title = "Average Song Energy by Year",
xaxis = list(title = "Year"),
yaxis = list (title = "Average Energy"))
energy_line
genre_by_year <- big_data %>% group_by(year) %>% summarise(genre = MaxTable(genre))
x <- MaxTable(fifties$genre)
x
v_line
tempo_line
dance_line
m_data <- big_data %>% select(energy, rank, valence, danceability, tempo)
matrix = cor(big_data, use = "pairwise.complete.obs")
big_data
m_data <- big_data %>% select(energy, rank, valence, danceability, tempo)
matrix = cor(m_data, use = "pairwise.complete.obs")
corrplot(matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 60)
fit_full_rw = lm(rank~., data=m_data)
fit_null_rw = lm(rank~1, data=m_data)
F_fit_rw = step(fit_null_rw, scope=list(lower=fit_null_rw,upper=fit_full_rw),
direction="forward")
summary(F_fit_rw)
expected_actual <- ggplot(m_data, aes(x = predict(F_fit_rw), y = rank)) + geom_point() +
labs(title = "Expected vs Actual for Forward Selection", x="Predicted rank", y='Actual rank')
expected_actual
dist <- ggplot(big_data, xlab="valence", ylab='Density',
main='Distribution of Male Average Watts per Workout', aes(x=valence)) +
geom_density() +
geom_vline(aes(xintercept = mean(big_data$valence), color = 'Mean'), linetype="dashed") +
geom_vline(aes(xintercept = median(big_data$valence), color = 'Median'), linetype="dashed") +
scale_color_manual(name = "Legend", values = c(Mean = "red", Median = "blue"))
dist
big_data <- big_data %>%  filter(valence < 1.0)
dist <- ggplot(big_data, xlab="valence", ylab='Density',
main='Distribution of Valence', aes(x=valence)) +
geom_density() +
geom_vline(aes(xintercept = mean(big_data$valence), color = 'Mean'), linetype="dashed") +
geom_vline(aes(xintercept = median(big_data$valence), color = 'Median'), linetype="dashed") +
scale_color_manual(name = "Legend", values = c(Mean = "red", Median = "blue"))
dist
dist
dist <- ggplot(big_data, xlab="valence", ylab='Density',
main='Distribution of Valence', aes(x=danceability)) +
geom_density() +
geom_vline(aes(xintercept = mean(big_data$danceability), color = 'Mean'), linetype="dashed") +
geom_vline(aes(xintercept = median(big_data$danceability), color = 'Median'), linetype="dashed") +
scale_color_manual(name = "Legend", values = c(Mean = "red", Median = "blue"))
dist
dist <- ggplot(big_data, xlab="valence", ylab='Density',
main='Distribution of Valence', aes(x=energy)) +
geom_density() +
geom_vline(aes(xintercept = mean(big_data$danceability), color = 'Mean'), linetype="dashed") +
geom_vline(aes(xintercept = median(big_data$danceability), color = 'Median'), linetype="dashed") +
scale_color_manual(name = "Legend", values = c(Mean = "red", Median = "blue"))
dist
x <- MaxTable(fifties$genre)[1]
x
x <- MaxTable(fifties$genre)[,1]
x[1]
fifties$decade <- 50
View(fifties)
zeros$decade <- 00
big_data <- big_data %>%  filter(valence < 1.0)
big_data <- rbind(fifties, sixties, seventies, eighties, nineties, zeros)
big_data <- na.omit(big_data)
big_data$date <- anydate(as.character(big_data$date))
big_data$year <- lubridate::year(big_data$date)
big_data <- big_data %>%  filter(valence < 1.0)
genre_by_year <- big_data %>% group_by(decade) %>% summarise(genre = MaxTable(genre))
fifties$decade <- 50
sixties$decade <- 60
seventies$decade <- 70
eighties$decade <- 80
nineties$decade <- 90
zeros$decade <- 00
big_data <- rbind(fifties, sixties, seventies, eighties, nineties, zeros)
big_data <- na.omit(big_data)
big_data$date <- anydate(as.character(big_data$date))
big_data$year <- lubridate::year(big_data$date)
big_data <- big_data %>%  filter(valence < 1.0)
MaxTable <- function(x){
dd <- unique(x)
dd[which.max(tabulate(match(x,dd)))]
}
genre_by_decade <- big_data %>% group_by(decade) %>% summarise(genre = MaxTable(genre))
View(genre_by_decade)
fifties$decade <- 1950
sixties$decade <- 1960
seventies$decade <- 1970
eighties$decade <- 1980
nineties$decade <- 1990
zeros$decade <- 2000
big_data <- rbind(fifties, sixties, seventies, eighties, nineties, zeros)
big_data <- na.omit(big_data)
big_data$date <- anydate(as.character(big_data$date))
big_data$year <- lubridate::year(big_data$date)
big_data <- big_data %>%  filter(valence < 1.0)
MaxTable <- function(x){
dd <- unique(x)
dd[which.max(tabulate(match(x,dd)))]
}
genre_by_decade <- big_data %>% group_by(decade) %>% summarise(genre = MaxTable(genre))
v  <- plot_ly(
x = valence_by_decade$decade,
y = valence_by_decade$avg_v,
name = "Positivity By year",
type = "bar"
)
valence_by_decade <- big_data %>% group_by(decade) %>% summarise(avg_v = mean(valence))
v  <- plot_ly(
x = valence_by_decade$decade,
y = valence_by_decade$avg_v,
name = "Positivity By year",
type = "bar"
)
v
summer <- na.omit(read.csv('data/love.csv'))
'%!in%' <- function(x,y)!('%in%'(x,y))
sixties_test <- sixties %>% filter(spotifyID %!in% summer$spotifyID)
s <- t.test(sixties$danceability, summer$danceability, var.equal = TRUE)
s
mlk <- na.omit(read.csv('data/MLK.csv'))
m <- t.test(sixties$danceability, mlk$danceability, var.equal = TRUE)
m
m_data <- big_data %>% select(energy, rank, valence, danceability, tempo, year)
matrix = cor(m_data, use = "pairwise.complete.obs")
corrplot(matrix, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 60)
nine <- jfk <- na.omit(read.csv('data/nine11.csv'))
n <- t.test(zeros$valence,nine$valence, var.equal = TRUE)
n
n <- t.test(zeros$danceability, nine$danceability, var.equal = TRUE)
n
nine <- na.omit(read.csv('data/nine11.csv'))
n <- t.test(zeros$danceability, nine$danceability, var.equal = TRUE)
n
end_v <- na.omit(read.csv('data/end_v.csv'))
end <- t.test(seveenties$danceability, end_v$danceability, var.equal = TRUE)
end_v <- na.omit(read.csv('data/end_v.csv'))
end_v <- na.omit(read.csv('end_v.csv'))
end_v <- na.omit(read.csv('v_end.csv'))
end <- t.test(seventies$danceability, end_v$danceability, var.equal = TRUE)
end
end_v <- na.omit(read.csv('v_end.csv'))
end_v <- t.test(seventies$valence, end_v$valence, var.equal = TRUE)
end_v
berlin <- na.omit(read.csv('berlin.csv'))
b_d <- t.test(eighties$danceability, berlin$danceability, var.equal = TRUE)
berlin <- na.omit(read.csv('berlin.csv'))
b_d <- t.test(eighties$danceability, berlin$danceability, var.equal = TRUE)
b_d
berlin <- na.omit(read.csv('berlin.csv'))
b_d <- t.test(eighties$valence, berlin$valence, var.equal = TRUE)
b_d
eighties <- filter(eighties, valence <= 1.0)
berlin <- na.omit(read.csv('berlin.csv'))
b_d <- t.test(eighties$valence, berlin$valence, var.equal = TRUE)
b_d
seventies <- filter(seventies, valence <= 1.0)
end_v <- na.omit(read.csv('v_end.csv'))
end <- t.test(seventies$danceability, end_v$danceability, var.equal = TRUE)
end_v
end
end_v <- na.omit(read.csv('v_end.csv'))
end_v <- t.test(seventies$valence, end_v$valence, var.equal = TRUE)
end_v
berlin <- na.omit(read.csv('berlin.csv'))
b_d <- t.test(eighties$valence, berlin$valence, var.equal = TRUE)
b_d
berlin <- na.omit(read.csv('berlin.csv'))
b_d <- t.test(eighties$danceability, berlin$danceability, var.equal = TRUE)
b_d
black <- na.omit(read.csv('black_monday.csv'))
black_d <- t.test(eighties$danceability, black_monday$danceability, var.equal = TRUE)
black_d <- t.test(eighties$danceability, black$danceability, var.equal = TRUE)
black_d
black_d <- t.test(eighties$valence, black$valence, var.equal = TRUE)
black_d
nineties <- na.omit(nineties)
columbine <- na.omit(read.csv('columbine.csv'))
co <- t.test(nineties$valence, columbine$valence, var.equal = TRUE)
co
columbine <- na.omit(read.csv('columbine.csv'))
co <- t.test(nineties$danceability, columbine$danceability, var.equal = TRUE)
co
zeros <- zeros %>% filter(valence <= 1.0)
bee <- na.omit(read.csv('data/bee_movie.csv'))
beez <- t.test(zeros$danceability, columbine$danceability, var.equal = TRUE)
beez
beez <- t.test(zeros$valence, columbine$valence, var.equal = TRUE)
beez
nineties <- nineties %>% filter(valence <= 1.0)
columbine <- na.omit(read.csv('columbine.csv'))
co <- t.test(nineties$danceability, columbine$danceability, var.equal = TRUE)
co
