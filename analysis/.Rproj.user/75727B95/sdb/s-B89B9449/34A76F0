{
    "collab_server" : "",
    "contents" : "require(dplyr)\nrequire(anytime)\nrequire(ggplot2)\nrequire(plotly)\nrequire(corrplot)\n\nsetwd('C:/Users/creil/Desktop/info300final/analysis/')\n\nfifties <- read.csv('data/fifties.csv')\nsixties <- read.csv('data/sixties.csv')\nsixties <- rbind(six, read.csv('data/sixties_1.csv'), read.csv('data/sixties_2.csv'), read.csv('data/sixties_3.csv'), read.csv('data/sixties_4.csv'))\n\nseventies <- read.csv('data/seventies.csv')\nseventies <- rbind(seventies, read.csv('data/seventies_1.csv'), read.csv('data/seventies_2.csv'), read.csv('data/seventies_3.csv'))\n\neighties <- read.csv('data/eighties.csv')\neighties <- rbind(eighties, read.csv('data/eighties_1.csv'), read.csv('data/eighties_2.csv'), read.csv('data/eighties_3.csv'))\n\nnineties <- read.csv('data/nineties.csv')\nnineties <- rbind(nineties, read.csv('data/nineties_1.csv'), read.csv('data/nineties_2.csv'), read.csv('data/nineties_3.csv'))\n\nzeros <- read.csv('data/zeros.csv')\nzeros <- rbind(nineties, read.csv('data/zeros_1.csv'), read.csv('data/zeros_2.csv'), read.csv('data/zeros_3.csv'))\n\nbig_data <- rbind(fifties, sixties, seventies, eighties, nineties, zeros)\nbig_data <- na.omit(big_data)\n\nbig_data$date <- anydate(as.character(big_data$date))\n\nbig_data$year <- lubridate::year(big_data$date)\n\nbig_data <- big_data %>%  filter(valence < 1.0)\n\nMaxTable <- function(x){\n  dd <- unique(x)\n  dd[which.max(tabulate(match(x,dd)))]\n}\n\n#averages by year\nvalence_by_year <- big_data %>% group_by(year) %>% summarise(avg_v = mean(valence))\ntempo_by_year <- big_data %>% group_by(year) %>% summarise(avg_t = mean(tempo))\ndance_by_year <- big_data %>% group_by(year) %>% summarise(avg_d = mean(danceability))\nenergy_by_year <- big_data %>% group_by(year) %>% summarise(avg_e = mean(energy))\ngenre_by_decade <- big_data %>% group_by(decade) %>% summarise(genre = MaxTable(genre))\n\nfifties$decade <- 1950\nsixties$decade <- 1960\nseventies$decade <- 1970\neighties$decade <- 1980\nnineties$decade <- 1990\nzeros$decade <- 2000\n\nvalence_by_decade <- big_data %>% group_by(decade) %>% summarise(avg_v = mean(valence))\n\nv  <- plot_ly(\n  x = valence_by_decade$decade,\n  y = valence_by_decade$avg_v,\n  name = \"Positivity By year\",\n  type = \"bar\"\n)\n\nv_line <- plot_ly(valence_by_year, x = ~year, y = ~avg_v, type = 'scatter', mode = 'lines') %>% \n  layout(title = \"Average Positivity by Year\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list (title = \"Average Valence\"))\n\ndance_line <- plot_ly(dance_by_year, x = ~year, y = ~avg_d, type = 'scatter', mode = 'lines') %>% \n  layout(title = \"Average Danceability by Year\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list (title = \"Average Danceability\"))\n\ntempo_line <- plot_ly(tempo_by_year, x = ~year, y = ~avg_t, type = 'scatter', mode = 'lines') %>% \n  layout(title = \"Average Tempo by Year\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list (title = \"Average Tempo\"))\n\nenergy_line <- plot_ly(energy_by_year, x = ~year, y = ~avg_e, type = 'scatter', mode = 'lines') %>% \n  layout(title = \"Average Song Energy by Year\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list (title = \"Average Energy\"))\n\n\n#Events\n#sixties\nsixties <- na.omit(sixties)\ncuban <- na.omit(read.csv('data/cuban_missle.csv'))\nc <- t.test(sixties$valence, cuban$valence, var.equal = TRUE)\n\njfk <- na.omit(read.csv('data/JFK.csv'))\nj <- t.test(sixties$valence, jfk$valence, var.equal = TRUE)\n\nmlk <- na.omit(read.csv('data/MLK.csv'))\nm <- t.test(sixties$danceability, mlk$danceability, var.equal = TRUE)\n\nsummer <- na.omit(read.csv('data/love.csv'))\n'%!in%' <- function(x,y)!('%in%'(x,y))\nsixties_test <- sixties %>% filter(spotifyID %!in% summer$spotifyID)\ns <- t.test(sixties$danceability, summer$danceability, var.equal = TRUE)\n\nm_data <- big_data %>% select(energy, rank, valence, danceability, tempo, year)\nmatrix = cor(m_data, use = \"pairwise.complete.obs\")\ncorrplot(matrix, type = \"upper\", order = \"hclust\", \n         tl.col = \"black\", tl.srt = 60)\n\n\nnine <- na.omit(read.csv('data/nine11.csv'))\nn <- t.test(zeros$danceability, nine$danceability, var.equal = TRUE)\n\nseventies <- filter(seventies, valence <= 1.0)\n\nend_v <- na.omit(read.csv('v_end.csv'))\nend <- t.test(seventies$danceability, end_v$danceability, var.equal = TRUE)\n\nend_v <- na.omit(read.csv('v_end.csv'))\nend_v <- t.test(seventies$valence, end_v$valence, var.equal = TRUE)\n\neighties <- filter(eighties, valence <= 1.0)\n\nberlin <- na.omit(read.csv('berlin.csv'))\nb_d <- t.test(eighties$danceability, berlin$danceability, var.equal = TRUE)\n\nblack <- na.omit(read.csv('black_monday.csv'))\nblack_d <- t.test(eighties$valence, black$valence, var.equal = TRUE)\n\nnineties <- nineties %>% filter(valence <= 1.0)\n\ncolumbine <- na.omit(read.csv('columbine.csv'))\nco <- t.test(nineties$danceability, columbine$danceability, var.equal = TRUE)\n\n\nzeros <- zeros %>% filter(valence <= 1.0)\nbee <- na.omit(read.csv('data/bee_movie.csv'))\nbeez <- t.test(zeros$valence, columbine$valence, var.equal = TRUE)\n\n\nfit_full_rw = lm(rank~., data=m_data)\nfit_null_rw = lm(rank~1, data=m_data)\nF_fit_rw = step(fit_null_rw, scope=list(lower=fit_null_rw,upper=fit_full_rw),\n                direction=\"forward\")\n\nsummary(F_fit_rw)\n\ndist <- ggplot(big_data, xlab=\"valence\", ylab='Density', \n                       main='Distribution of Valence', aes(x=energy)) + \n  geom_density() +\n  geom_vline(aes(xintercept = mean(big_data$danceability), color = 'Mean'), linetype=\"dashed\") +\n  geom_vline(aes(xintercept = median(big_data$danceability), color = 'Median'), linetype=\"dashed\") +\n  scale_color_manual(name = \"Legend\", values = c(Mean = \"red\", Median = \"blue\"))\n\nsummary(big_data)\n",
    "created" : 1544568719078.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3927642623",
    "id" : "34A76F0",
    "lastKnownWriteTime" : 1544598178,
    "last_content_update" : 1544643262155,
    "path" : "C:/Users/creil/Desktop/info300final/analysis/stats.R",
    "project_path" : "stats.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}